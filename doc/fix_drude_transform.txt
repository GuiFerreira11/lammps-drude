<script type="text/javascript"
  src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML">
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({ TeX: { equationNumbers: {autoNumber: "AMS"} } });
</script>

"LAMMPS WWW Site"_lws - "LAMMPS Documentation"_ld - "LAMMPS Commands"_lc :c

:link(lws,http://lammps.sandia.gov)
:link(ld,Manual.html)
:link(lc,Section_commands.html#comm)

:line

fix drude/transform/direct command :h3
fix drude/transform/reverse command :h3

[Syntax:]

fix ID group-ID drude/transform/direct :pre
fix ID group-ID drude/transform/inverse keyword value :pre

ID, group-ID are documented in "fix"_fix.html command :ulb,l
drude/transform/direct or drude/transform/inverse = name of this fix
command :l
zero or one keywod may be appended to drude/transform/inverse :l
keyword = {temp} :l
  {temp} value = {yes} or {no} = do or do not calculate reduced temperatures of core and Drude particles :pre
:ule

[Examples:]

fix 3 all drude/transform/direct
fix 1 all drude/transform/inverse temp yes :pre

[Description:]

Transform the coordinates of the Drude oscillators from real to
reduced and back for thermalizing the Drude oscillators as described
in "(Lamoureux)"_#Lamoureux using a Nose-Hoover thermostat.

Drude oscillators are a pair of atoms representing a single
polarizable atom.  See "Drude oscillators"_drude_oscillators.html
about how to use them in LAMMPS.  Ideally, the mass of Drude particles
would vanish and their positions would be determined self-consistently
by iterative minimization of the energy, the cores' positions being
fixed.  It is however more efficient and it yields comparable results,
if the Drude oscillators (the motion of the Drude particle relative to
the core) are thermalized at a low temperature.  In that case, the
Drude particles need a small mass.

The thermostats act on the reduced degrees of freedom, which are
defined by :b {In these equations upper case denotes atomic or center
of mass values and lower case denotes Drude particle or dipole
values. Primes denote the transformed (reduced) values, while bare
letters denote the original values.} :b Masses: \begin\{equation\} M'
= M + m \end\{equation\} \begin\{equation\} m' = \frac \{M\, m \}
\{M'\} \end\{equation\} Positions: \begin\{equation\} X' = \frac \{M\,
X + m\, x\} \{M'\} \end\{equation\} \begin\{equation\} x' = x - X
\end\{equation\} Velocities: \begin\{equation\} V' = \frac \{M\, V +
m\, v\} \{M'\} \end\{equation\} \begin\{equation\} v' = v - V
\end\{equation\} Forces: \begin\{equation\} F' = F + f
\end\{equation\} \begin\{equation\} f' = \frac \{ M\, f - m\, F\}
\{M'\} \end\{equation\}
 
This transform conserves the total kinetic energy
\begin\{equation\} \frac 1 2 \, (M\, V^2\ + m\, v^2) 
= \frac 1 2 \, (M'\, V'^2\ + m'\, v'^2) \end\{equation\}
and the virial defined with absolute positions
\begin\{equation\} X\, F + x\, f = X'\, F' + x'\, f' \end\{equation\} 

The {temp} keyword specifies if the temperatures in reduced units of
cores and Drude particles are calculated. If the {temp} option is set
to {yes} the reduced temperatures, degrees of freedom and kinetic
energies are calculated at cab ne accessed as explained below; If {no}
they are not.


:line

This fix requires so that each atom knows whether it is a Drude
particle or not.  You must therefore use the fix
"drude"_fix_drude.html to specify the Drude status of each atom type.

Note: only the core atoms need to be in the group of this fix. The
Drude particle will be transformed together with its core even if it
is not itself in the group.  It is safe to include Drude particles or
non-polarizable atoms in the group. The non-polarizable atoms will
simply not be transformed.

Note: It is necessary that each core of a given atom type is always
connected to a Drude particle of a corresponding atom type. I.e. there
must be separate atom types for the Drude particles if they are
connected to cores of different types.

:line

This fix does NOT perform time integration. It only transform masses,
coordinates, velocities and forces. Thus you must use separate time
Nose-Hoover integration fixes, like "fix nve"_fix_nve.html or "fix
npt"_fix_nh.html to actually update the velocities and positions of
atoms.  In order to thermalize the reduced degrees of freedom at
different temperatures, two Nose-Hoover thermostats must be defined,
acting on two distinct groups.

The {fix drude/transform/direct} must appear before the Nose-Hoover
thermostating fixes.  The {fix drude/transform/inverse} must appear
after the Nose-Hoover thermostating fixes. :b

Example: :b

fix fDIRECT all drude/transform/direct
fix fNVT gCORES nvt temp 300.0 300.0 100.0
fix fNVT gDRUDES nvt temp 1.0 1.0 100.0
fix fINVERSE all drude/transform/inverse :pre

In this example, {gCORES} is the group of the atom cores and {gDRUDES}
is the group of the Drude particles. The centers of mass of the Drude
oscillators will be thermostated at 300.0 and the internal degrees of
freedom will be thermostated at 1.0.

In addition, if you want to use a barostat to simulate a system at
constant pressure, only one of the Nose-Hoover fixes must be {npt},
the other one should be {nvt}. You must add a {compute temp/com} and a
{fix_modify} command so that the temperature of the {npt} fix be just
that of its group but the pressure be the overall pressure
{thermo_press}. :b

Example: :b

compute cTEMP_CORE gCORES temp/com
fix fDIRECT all drude/transform/direct
fix fNPT gCORES npt temp 298.0 298.0 100.0 iso 1.0 1.0 500.0
fix_modify fNPT temp cTEMP_CORE press thermo_press
fix fNVT gDRUDES nvt temp 5.0 5.0 100.0
fix fINVERSE all drude/transform/inverse :pre

In this example, {gCORES} is the group of the atom cores and {gDRUDES}
is the group of the Drude particles. The centers of mass of the Drude
oscillators will be thermostated at 298.0 and the internal degrees of
freedom will be thermostated at 5.0. The whole system will be
barostated at 1.0.

In order to avoid the flying ice cube problem (irreversible transfer
of linear momentum to the center of mass of the system), you may need
to add a {fix momentum} command like :b fix fMOMENTUM all momentum 100
linear 1 1 1 :pre

:line

[Restart, fix_modify, output, run start/stop, minimize info:]

If the {temp yes} keyword is used in {fix drude/transform/inverse} this
fix computes a global vector of 6 components which can be accessed by
various "output commands"_Section_howto.html#howto_15. The meaning of
the components are

[1] temperature of the centers of mass (temperature units)
[2] temperature of the dipoles (temperature units)
[3] number of degrees of freedom of the centers of mass
[4] number of degrees of freedom of the dipoles 
[5] kinetic energy of the centers of mass (energy units)
[6] kinetic energy of the dipoles (energy units) :pre


No information about this fix is written to "binary restart files"_restart.html

[Restrictions:] none

[Related commands:]

"fix drude"_fix_drude.html,
"fix langevin/drude"_fix_langevin_drude.html,
"compute temp/drude"_compute_temp_drude.html,
"pair_style thole"_pair_thole.html

[Default:]

The option defaults are temp = no.

:line

:link(Lamoureux)
[(Lamoureux)] Lamoureux and Roux, J Chem Phys, 119, 3025-3039 (2003).



