<script type="text/javascript"
  src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML">
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({ TeX: { equationNumbers: {autoNumber: "AMS"} } });
</script>

"LAMMPS WWW Site"_lws - "LAMMPS Documentation"_ld - "LAMMPS Commands"_lc :c

:link(lws,http://lammps.sandia.gov)
:link(ld,Manual.html)
:link(lc,Section_commands.html#comm)

:line

6.XX Drude oscillators :link(howto_XX),h4
 
This section gives details about using the USER-DRUDE package to
include explicit polarization in classical force fields through Drude
oscillators, applying the extended Langrangian method described by
"Lamoureux and Roux"_#Lamoureux.  Polarizable atoms acquire an induced
electric dipole moment under the action of an external electric field,
for example the electric field created by the surrounding particles.
Drude oscillators represent these dipoles by two point charges, the
core and the Drude particle, bound by a harmonic potential. The values
of the charges are fixed; it is the distance between them and the
orientation of the dipole that represent the polarization effects. The
Drude particle can be thought of as the electron cloud whose center
can be displaced from the position of the corresponding nucleus
(core).

Ideally, the mass of the Drude particles should be small and the
stiffness of the harmonic bonds connecting them to their cores should
be large, so that the Drude particles remain close to their
cores. However, this would imply very fast ocillations of the Drude
particles and require a very small time step. The extended Lagrangian
method allows the additional degrees of freedom corresponding to the
Drude particles to be thermalized using a separate thermostat. By
choosing a low temperature for these modes the trajectory of the Drude
particles approximates that of the self-consistent regime "(Lamoureux,
Roux)"_#Lamoureux, and allows integration with a timestep of the order
of the fs.

Using Drude oscillators in LAMMPS requires compilation of the
USER-DRUDE package. Then, the data file has to contain information on
the Drude particles (masses, charges and bonds to the respective
cores) and the input script has to include specific commands to handle
the Drude dipoles, namelly for thermostating and short-range
screening.

Examples of use of the USER-DRUDE package with flexible or rigid
molecules are distributed with the package, together with a
step-by-step tutorial.


Data file :h5

Both the core atoms and the corresponding Drude particles appear in
the data file as "normal" atoms, with different atom types for Drude
particles if the respective cores are also of different atom
types. The core-Drude bonds appear as usual harmonic bonds.  An
additional section called {Drude Types} must be present in the data
file, with one line per atom type in the system, formatted as :b

{atom_type_id drude_type} :pre

where {drude_type} is:

    0 for non-polarizable atom types (e.g. hydrogen atoms)
    1 for the types of the cores of polarizable atoms
    2 for the types of the Drude particles :ul

For example:

Drude Types :pre

   1 1
   2 0
   3 2 :pre

Note: Internally within the code, the core-Drude particle pairs are
identified by looking up the bonds connecting Drude particles (Drude
type 2) to their respective cores.

The sum of the masses of a core-Drude pair should be the mass of the
initial (unsplit) atom, \(m_C + m_D = m\).  The sum of their charges
should be the charge of the initial (unsplit) atom, \(q_C + q_D =
q\). These are specified in the {Masses} and {Atoms} sections of the
data file as for any typical atoms.

A harmonic potential between core and Drude partners should be
present, with force constant \(k_D\) and an equilibrium distance of
zero. Core-Drude bonds should appear as standard bonds in the {Bonds}
section of the data file. The (half-)stiffness of the "harmonic
bond"_bond_harmonic.html \(K_D = k_D/2\) and the Drude charge \(q_D\)
are related to the atom polarizability \(\alpha\) by:

\\[ K_D = \frac 1 2\, \frac \{q_D^2\} \alpha \\]

The values of Drude mass, Drude charge, and force constant can be
chosen according to different strategies, as in the following examples
of polarizable force fields.

"Lamoureux and Roux"_#Lamoureux suggest adopting a global
half-stiffness, \(K_D\) = 500 kcal/(mol &Aring;<sup>2</sup>) for all
types of core-Drude bond, a global mass \(m_D\) = 0.4 u (or g/mol) for
all types of Drude particle, and to calculate the Drude charges for
individual atom types from the atom polarizabilities using equation
above. This choice is followed in the polarizable CHARMM force
field. :ulb,l

"Schroeder and Steinhauser"_#Schroeder suggest adopting a global
charge \(q_D\) = -1.0 e and a global mass \(m_D\) = 0.1 u (or g/mol)
for all Drude particles, and to calculate the force constant for each
type of core-Drude bond from the equation above. :l,ule

The timesteps used by these authors are between 0.5 and 2 fs, with the
degrees of freedom of the Drude oscillators kept cold at 1 K. In both
these force fields hydrogen atoms are treated as non-polarizable.


Input script :h5

The {drude} atom style to be set by the "atom_style"_atom_style.html
command in the input script:

atom_style drude :pre

It is similar to the {full} atom style, in that atoms can have
electrostatic charge and also bonded terms (such as bonds, angles,
dihedrals and impropers) but includes a Drude type (0, 1 or 2 as
explained previously).

The {special_bonds} command should set a {coul} factor of 0.0 for 1-2
neighbors, which is the default. The list of special neighbors is
redefined so that the Drude particles are equivalent to their cores
with respect to the 1-2, 1-3, etc. neighboring relations. In this
manner, the same special factor is applied to each core and Drude
particle in a pair.  This may require increasing the memory reserved
for storing the list of special neighbors, which can be done using the
{extra} keyword of the {special_bonds} command. An error message will
be printed by LAMMPS if extra memory is needed for special neighbors.

Induced Drude dipoles on neighboring, bonded atoms can interact too
strongly, leading to excessive correlation or even instabilities of
the trajectory. The interaction between Drude dipoles, composed of the
\(q_D\) charge on a Drude particle and the opposite charge on its
core, can be damped at short distance by the "pair_style
thole"_pair_thole.html. The pair style {thole} is to be used as {hybrid/overlay}
in the "pair_style"_pair_style.html command, since it applies a
correction to the Coulomb interactions:

pair_style hybrid/overlay lj/cut/coul/long 10.0 thole 2.6 10.0 :pre

Since hybrid/overlay does not support mixing, the interaction
coefficients of all pairs must be explicitly given, both for the van
der Waals/Coulomb and for the Thole correction.

pair_coeff    1    1 thole  1.66 
pair_coeff    1    2 thole  1.66 :pre

See the doc page of the "pair_style thole"_pair_thole.html for more
information.

The Drude oscillators can be thermalized at a low temperature, to
approximate a self consistent field.  This can be done with a Langevin
thermostat using a specific "fix
langevin_drude"_fix_langevin_drude.html as described in
"(Jiang)"_#Jiang or with a Lagrangian method (Nose-Hoover thermostat)
using "fix drude/transform"_fix_drude_transform.html as described in
"(Lamoureux)"_#Lamoureux.

Use of the "langevin/drude"_fix_langevin_drude.html thermostat
requires that velocities of ghost atoms be communicated between
processors, and also that a fix performing time integration be called,
resulting in a block of instructions as follows:

comm_modify vel yes
fix LANG all langevin/drude 300.0 100 12435 1.0 20 13977 zero yes
fix NVE all nve :pre

Here the centers of mass of the core-Drude pairs are thermostated at
300 K and the relative motion of the Drude particles with respect t
the cores is thermostated at 1 K. The pressure of the system can be
regulated using a Nose-Hoover barostat, by replacing the {fix nve} by:

fix NPH all nph iso 1. 1. 500 :pre

The correct temperature of the cores and Drude particles can be
obtained from the output of {fix langevin/drude}:

thermo_style custom ... f_LANG\[1\] f_LANG\[2\] :pre


Use of Nose-Hoover thermostat instead of Langevin thermostat requires
a different block of instructions including use of "fix
drude/transform"_#fix_drude_transform.html to perform coordinate
transformations of the core-Drude pairs:

fix DIRECT all drude/transform/direct
fix NVT1 ATOMS nvt temp 300. 300. 100
fix NVT2 DRUDES nvt temp 1. 1. 20
fix INVERSE all drude/transform/inverse :pre

Here the first line transforms the coordinates of the cores towards
the centers of mass of core-Drude pairs and the coordinates of the
Drude particles become relative to the cores. The last one performs
the oposite transformations. The {fix nvt} instances regulate the
temperature of (center of mass) core-Drude pairs and of the relative
motion of Drude particles with respect to their cores. For pressure
regulation using a Nose-Hoover barostat the following block of
instructions can be used:

compute TATOMS ATOMS temp
fix DIRECT all drude/transform/direct
fix NPT ATOMS npt temp 300. 300. 100 iso 1. 1. 500
fix_modify NPT temp TATOMS
fix NVT DRUDES nvt temp 1. 1. 20
fix INVERSE all drude/transform/inverse :pre

where the temperature of the cores and non-polarizable atoms (group
ATOMS), not including the Drude particles, is used by the {fix
npt}. Also, the system pressure is regulated by only one fix. Finally,
the "fix momentum"_fix_momentum.html can be used to avoid the system
gaining overall momentum (flying ice cube artifact described by
"Lamoureux, Roux"_#Lamoureux):

fix MOMENTUM all momentum 100 linear 1 1 1 :pre

If it is the case, labels for the Drude particles can be added to the
trajectory dump file through the "dump_modify
element"_dump_modify.html command:

dump_modify TRAJ element ... D D D :pre


:line

:link(Lamoureux)
[(Lamoureux)] Lamoureux and Roux, J Chem Phys, 119, 3025-3039 (2003).

:link(Schroeder)
[(Schroeder)]  Schr&ouml;der and Steinhauser, J Chem Phys, 133,
154511 (2010).

:link(Jiang)
[(Jiang)] Jiang, Hardy, Phillips, MacKerell, Schulten, and Roux, 
 J Phys Chem Lett, 2, 87-92 (2011).

